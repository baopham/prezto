#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# GistID: 2957960

# {{{ Prezto settings:
#
# Modules: editor, history, completion, prompt, fasd, git
# Editor keymap: vi
# Theme: bpm (https://gist.github.com/4230860)
#
# }}}

#}}}

#{{{ Completion

# Fall back to file completion if all else fails
orig_comp="$(zstyle -L ':completion:\*' completer 2>> "/dev/null")"
fasd_comp="_fasd_zsh_word_complete_trigger"
if [ "$orig_comp" ]; then
  case $orig_comp in
    # make sure the fasd completor goes after _files
    *_files*$fasd_comp*);;
    *$fasd_comp*) eval "${${orig_comp}/${fasd_comp}/_files} ${fasd_comp}";;
    *) eval "$orig_comp _files";;
  esac
else
  zstyle ':completion:*' completer _expand _complete _match _approximate _files _correct
fi
unset orig_comp fasd_comp

# Files to ignore during completion
fignore=(DS_Store $fignore)

# <C-F> for file completion
zle -C complete-file menu-expand-or-complete _generic
zstyle ':completion:complete-file:*' completer _files
bindkey -M viins '^F'      complete-file

# AWS CLI
source /usr/local/share/zsh/site-functions/_aws

#}}}

#{{{ Alias

alias firefox='open -a /Applications/Firefox.app'
alias text='open -a /Applications/TextEdit.app'
alias hide='setfile -a V'
alias show='setfile -a v'
alias drushy='drush -y'
alias git-pre-commit='mv ./.git/hooks/{pre-commit.sample,pre-commit}'
alias behat='./vendor/bin/behat --stop-on-failure'
alias phpunit='./vendor/bin/phpunit'
alias jasypt-encrypt='~/Projects/jasypt/bin/encrypt.sh algorithm=PBEWithMD5AndDES'
alias jasypt-decrypt='~/Projects/jasypt/bin/decrypt.sh algorithm=PBEWithMD5AndDES'
alias homestead='function __homestead() { (cd ~/Homestead && vagrant $*); unset -f __homestead; }; __homestead'

#}}}

#{{{ Extra Vim Key binding

# Switch to command mode.
bindkey -M viins '^[' vi-cmd-mode

# Movement
bindkey -M viins '^E'   end-of-line
bindkey -M viins '^A'   vi-beginning-of-line
bindkey -M vicmd '^E'   end-of-line
bindkey -M vicmd '^A'   vi-beginning-of-line
bindkey "^[[1;5C"       forward-word            # Ctrl + right arrow
bindkey "^[[1;5D"       backward-word           # Ctrl + left arrow

# Kill line
bindkey -M viins '^K'   kill-line
bindkey -M viins '^U'   backward-kill-line
bindkey -M vicmd '^K'   kill-line
bindkey -M vicmd '^U'   backward-kill-line

# History
# Search based on what you typed in already
bindkey -M vicmd "//"   history-beginning-search-forward
bindkey -M vicmd "??"   history-beginning-search-backward

# Backspace
bindkey -M viins '^W'   backward-kill-word

#}}}

#{{{ Functions

function batch-rename {
  if [ $# -eq 0 ] ; then
    echo 'batch-rename *regex-files* new-basename'
  else
    args=($*)
    files=($args[1,-2])
    basename=$args[-1]
    count=1
    for file in $files; do
      filename=$(basename "$file")
      ext="${filename##*.}"
      mv -v ${file} ${basename}-${count}.${ext}
      ((count=$count+1))
    done
    unset count args files basename filename ext
  fi
}

function nametab {
  echo -ne "\033]0;"$@"\007"
}

function proj-ctags {
  # Check if the current directory is a git repo
  if git rev-parse --git-dir > /dev/null 2>&1; then
    dir="$(git rev-parse --show-toplevel)/.git"
  else
    dir="$(pwd)"
  fi
  if [ $# -eq 0 ] ; then
    ctags -f ${dir}/.tags
  else
    args=($*) 
    for arg in $args; do
      ctags --languages=${arg} -f ${dir}/${arg}.tags
    done
  fi
}

function removeFromPath() {
  export PATH=$(echo $PATH | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

#}}}

#{{{ Options

setopt AUTO_CD

setopt CORRECT

#}}}

#{{{ fasd

# Alias
alias v='fasd -fe vim' # quick opening files with vim
alias m='fasd -fe mvim' # quick opening files with macvim
alias o='fasd -ae open' # quick opening files with open

#}}}
